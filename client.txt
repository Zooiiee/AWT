Hidden field

protected void Page_Load(object sender, EventArgs e)
        {
            // You can also dynamically set a value here
            if (!IsPostBack)
            {
                hiddenField1.Value = "Welcome123";
            }
        }

        protected void btnSubmit_Click(object sender, EventArgs e)
        {
            string name = txtName.Text;
            string hiddenValue = hiddenField1.Value;

            lblResult.Text = "Name: " + name + "<br/>Hidden Field Value: " + hiddenValue;
        }

aspx
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title>Hidden Field Demo</title>
</head>
<body>
    <form id="form1" runat="server">
        <div style="font-family: Arial; padding: 20px;">
            <h1>Hidden Field</h1>
            <p>&nbsp;</p>

            <asp:Label ID="lblMessage" runat="server" Text="Enter your name: "></asp:Label>
            <asp:TextBox ID="txtName" runat="server" Height="28px" Width="174px"></asp:TextBox><br /><br />

            <asp:HiddenField ID="hiddenField1" runat="server" Value="User123" />

            <asp:Button ID="btnSubmit" runat="server" Text="Submit" OnClick="btnSubmit_Click" Height="37px" Width="91px" /><br /><br />

            <asp:Label ID="lblResult" runat="server" ForeColor="Blue"></asp:Label>
        </div>
    </form>
</body>
</html>


Cache.aspx.cs
        protected void Page_Load(object sender, EventArgs e)
        {

        }

        protected void btnAddCache_Click(object sender, EventArgs e)
        {
            // Add name to cache with 1-minute expiration
            Cache.Insert("UserName", txtName.Text, null, DateTime.Now.AddMinutes(1), TimeSpan.Zero);
            lblStatus.Text = "Name added to cache.";
        }

        protected void btnReadCache_Click(object sender, EventArgs e)
        {
            // Read from cache
            if (Cache["UserName"] != null)
            {
                lblStatus.Text = "Cached Name: " + Cache["UserName"].ToString();
            }
            else
            {
                lblStatus.Text = "No value found in cache.";
            }
        }

        protected void btnRemoveCache_Click(object sender, EventArgs e)
        {
            // Remove from cache
            Cache.Remove("UserName");
            lblStatus.Text = "Cache entry removed.";
        }

cache.aspx 
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="Cache.aspx.cs" Inherits="ClientSM.Cache" %>
<%@ OutputCache Duration="100" VaryByParam="none" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title>Cache Demo</title>
</head>
<body>
    <form id="form1" runat="server">
        <div style="font-family: Arial; padding: 20px;">
            <h2>CACHE</h2>

            <asp:Label ID="lblStatus" runat="server" ForeColor="Green"></asp:Label><br /><br />

            <asp:Label ID="lblName" runat="server" Text="Enter your name: "></asp:Label>
            <asp:TextBox ID="txtName" runat="server"></asp:TextBox><br /><br />

            <asp:Button ID="btnAddCache" runat="server" Text="Add to Cache" OnClick="btnAddCache_Click" />
            <asp:Button ID="btnReadCache" runat="server" Text="Read from Cache" OnClick="btnReadCache_Click" />
            <asp:Button ID="btnRemoveCache" runat="server" Text="Remove from Cache" OnClick="btnRemoveCache_Click" />
        </div>
    </form>
</body>
</html>


Cookies.aspx.cs

        protected void Page_Load(object sender, EventArgs e)
        {

        }

        protected void btnCreate_Click(object sender, EventArgs e)
        {
            // Create a cookie
            HttpCookie userCookie = new HttpCookie("UserInfo");
            userCookie["Name"] = txtName.Text;
            userCookie.Expires = DateTime.Now.AddMinutes(10); // expires in 10 minutes
            Response.Cookies.Add(userCookie);

            lblStatus.Text = "Cookie created successfully!";
        }

        protected void btnRead_Click(object sender, EventArgs e)
        {
            // Read the cookie
            HttpCookie userCookie = Request.Cookies["UserInfo"];
            if (userCookie != null)
            {
                string name = userCookie["Name"];
                lblStatus.Text = "Cookie Value: " + name;
            }
            else
            {
                lblStatus.Text = "Cookie not found.";
            }
        }

        protected void btnDelete_Click(object sender, EventArgs e)
        {
            // Delete the cookie
            if (Request.Cookies["UserInfo"] != null)
            {
                HttpCookie userCookie = new HttpCookie("UserInfo");
                userCookie.Expires = DateTime.Now.AddDays(-1); // set expiration in the past
                Response.Cookies.Add(userCookie);
                lblStatus.Text = "Cookie deleted.";
            }
            else
            {
                lblStatus.Text = "No cookie to delete.";
            }
        }

cookies
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="Cookies.aspx.cs" Inherits="ClientSM.Cookies" %>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title>Cookies Demo</title>
</head>
<body>
    <form id="form1" runat="server">
        <div style="font-family: Arial; padding: 20px;">
            <h2>COOKIES</h2>

            <asp:Label ID="lblStatus" runat="server" ForeColor="Green"></asp:Label><br /><br />

            <asp:Label ID="lblName" runat="server" Text="Enter your name: "></asp:Label>
            <asp:TextBox ID="txtName" runat="server"></asp:TextBox><br /><br />

            <asp:Button ID="btnCreate" runat="server" Text="Create Cookie" OnClick="btnCreate_Click" />
            <asp:Button ID="btnRead" runat="server" Text="Read Cookie" OnClick="btnRead_Click" />
            <asp:Button ID="btnDelete" runat="server" Text="Delete Cookie" OnClick="btnDelete_Click" />
        </div>
    </form>
</body>
</html>
